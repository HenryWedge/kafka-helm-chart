name: "nameOfApp"
namespace: "kafka"

superUsers: []
distributeWideOnNodes: true
topologyKey: 'kubernetes.io/hostname'

#TODO separate for zookeeper and broker
resources:
  cpu:
    request: 1
    limit: 1
  memory:
    request: 1Gi
    limit: 1Gi
  disk: 2Gi

broker:
  replicas: 3

zookeeper:
  replicas: 3

storageClass:
  "ceph-rbd"

loggers: {
  "log4j.appender.CONSOLE": 'org.apache.log4j.ConsoleAppender',
  "log4j.appender.CONSOLE.layout": 'net.logstash.log4j.JSONEventLayoutV1',
}

brokerConfig: {
  "auto.create.topics.enable": false,
  "num.partitions": 1,
  "default.replication.factor": 3,
  "min.insync.replicas": 2,
  "offsets.topic.replication.factor": 3,
  "transaction.state.log.segment.bytes": 16000000, #8sLib.k8sLib.evalBytes(16, 'MiB'),
  "transaction.state.log.replication.factor": 3,
  "transaction.state.log.min.isr": 2,
  "num.replica.fetchers": 3,
  "replica.socket.receive.buffer.bytes": 256000, #8sLib.evalBytes(256, 'kiB'),
  "replica.fetch.response.max.bytes": 2000000, #8sLib.evalBytes(2, 'MiB'),
  "log.segment.bytes": 64000000, #8sLib.evalBytes(64, 'MiB'),
  "log.roll.ms": 14400000, #8sLib.evalTimeToMs(4, 'h'),
  "log.cleaner.threads": 2, #8sLib.threadCount(cpuSizing,desiredCountPerCpu=2),
  "log.cleaner.io.buffer.size": 2048000, #8sLib.evalBytes(2048, 'kiB'),
  "log.cleaner.min.cleanable.ratio": 0.2,
  "log.retention.ms": , #8sLib.evalTimeToMs(8, 'w'),
  "min.compaction.lag.ms": 28800000, #8sLib.evalTimeToMs(8, 'h'),
  "max.compaction.lag.ms": 604800000, #8sLib.evalTimeToMs(7, 'd'),
  "num.network.threads": 3, #8sLib.threadCount(cpuSizing,desiredCountPerCpu=3),
  "num.io.threads": 2, #8sLib.threadCount(cpuSizing,desiredCountPerCpu=2),
  "message.max.bytes": 2000000, #8sLib.evalBytes(2, 'MiB'),
  "socket.request.max.bytes": 400000000, #8sLib.evalBytes(400, 'MiB'),
  "socket.send.buffer.bytes": 400000, #8sLib.evalBytes(400, 'kiB'),
  "socket.receive.buffer.bytes": 400000, #8sLib.evalBytes(400, 'kiB'),
  "num.recovery.threads.per.data.dir": 1, #8sLib.threadCount(cpuSizing,desiredCountPerCpu=1),
  "group.initial.rebalance.delay.ms": 10000, #k8sLib.evalTimeToMs(10, 's'),
  "compression.type": 'producer',
}